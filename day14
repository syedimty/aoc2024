     // Christmas tree pattern defined as a set of relative coordinates
const christmasTreePattern = new Set([
    '0,0', '1,1', '2,2', '1,3', '0,4', '-1,3', '-2,2', '-1,1'
]);

function getRobotPositionsAfterTime(robotData, seconds, width, height) {
    const robots = robotData.split('\n').map(line => {
        const [position, velocity] = line.split(' v=');
        const [px, py] = position.replace('p=', '').split(',').map(Number);
        const [vx, vy] = velocity.split(',').map(Number);
        return { px, py, vx, vy };
    });

    for (let i = 0; i < robots.length; i++) {
        robots[i].px = (robots[i].px + robots[i].vx * seconds) % width;
        robots[i].py = (robots[i].py + robots[i].vy * seconds) % height;
        if (robots[i].px < 0) robots[i].px += width;
        if (robots[i].py < 0) robots[i].py += height;
    }

    return robots;
}

function checkChristmasTreePattern(robots, width, height) {
    const positions = new Set(robots.map(r => `${r.px},${r.py}`));

    for (const pos of positions) {
        const [px, py] = pos.split(',').map(Number);
        const matches = [...christmasTreePattern].every(coord => {
            const [dx, dy] = coord.split(',').map(Number);
            const newX = (px + dx + width) % width;
            const newY = (py + dy + height) % height;
            return positions.has(`${newX},${newY}`);
        });

        if (matches) {
            return true;
        }
    }

    return false;
}

function findFewestSecondsForPattern(robotData, width, height, maxSeconds = 10000) {
    let seconds = 0;
    while (seconds < maxSeconds) {
        const robots = getRobotPositionsAfterTime(robotData, seconds, width, height);
        if (checkChristmasTreePattern(robots, width, height)) {
            return seconds;
        }
        seconds++;
    }
    return -1; // Return -1 if no pattern is found within maxSeconds
}

// Example usage
const robotData = ``;

const width = 101;
const height = 103;

const fewestSeconds = findFewestSecondsForPattern(robotData, width, height);
console.log('Fewest Seconds for Christmas Tree Pattern:', fewestSeconds);
